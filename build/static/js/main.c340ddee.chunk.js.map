{"version":3,"sources":["back.jpg","layout/top_tilte/top_title.js","components/home/home.js","components/aboutus/aboutus.js","components/contact/contact.js","components/demos/demos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopTitle","class","href","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","ButtonGroup","aria-label","Button","variant","to","Home","src","back","alt","AboutUs","role","Contact","Card","Body","Demos","style","marginLeft","Img","Title","App","className","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,kC,4MC0C5BC,MAtCf,WACE,OACE,yBAAKC,MAAM,yCACT,yBAAKA,MAAM,4CACT,uBAAGC,KAAK,IAAID,MAAM,0CAChB,yBACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,eAAa,IACbC,iBAAe,QACfC,kBAAgB,QAChBV,MAAM,SAKR,yCAEF,kBAACW,EAAA,EAAD,CAAaC,aAAW,iBACtB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SACd,kBAAC,IAAD,CAAMC,GAAG,YAAT,aAEF,kBAACF,EAAA,EAAD,CAAQC,QAAQ,SACd,kBAAC,IAAD,CAAMC,GAAG,YAAT,YAEF,kBAACF,EAAA,EAAD,CAAQC,QAAQ,SACd,kBAAC,IAAD,CAAMC,GAAG,UAAT,c,iBChBGC,MAdf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,yBACEC,IAAKC,IACLC,IAAI,mBACJhB,MAAM,OACNC,OAAO,WCaAgB,MAtBf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,6BACA,0BAAMC,KAAK,OAAOrB,MAAM,eACtB,wBAAIA,MAAM,iBAAV,oBACA,uBAAGA,MAAM,QAAT,4K,QCMOsB,MAZf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,+BACA,kBAACD,EAAA,EAAKC,KAAN,6CCeOC,MArBf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,6BACA,kBAACF,EAAA,EAAD,CAAMG,MAAO,CAAEC,WAAY,OAAQxB,MAAO,UACxC,kBAACoB,EAAA,EAAKK,IAAN,CACEd,QAAQ,MACRY,MAAO,CAAEvB,MAAO,QAASC,OAAQ,SACjCa,IAAI,gFAEN,kBAACM,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKM,MAAN,mBC0BKC,MA/Bf,WACE,OACE,yBAAKC,UAAU,OAiBb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWjB,EAAMkB,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWb,IAClC,kBAAC,IAAD,CAAOY,KAAK,WAAWC,UAAWX,IAClC,kBAAC,IAAD,CAAOU,KAAK,SAASC,UAAWR,QCvBtBU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c340ddee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.f9eec5c1.jpg\";","import React from \"react\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction TopTitle() {\r\n  return (\r\n    <div class=\"navbar navbar-dark bg-dark box-shadow\">\r\n      <div class=\"container d-flex justify-content-between\">\r\n        <a href=\"/\" class=\"navbar-brand d-flex align-items-center\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-width=\"2\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            class=\"mr-2\"\r\n          >\r\n            {/* <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\r\n              <circle cx=\"12\" cy=\"13\" r=\"4\"></circle> */}\r\n          </svg>\r\n          <strong>Home</strong>\r\n        </a>\r\n        <ButtonGroup aria-label=\"Basic example\">\r\n          <Button variant=\"light\">\r\n            <Link to=\"/aboutus\">About US</Link>\r\n          </Button>\r\n          <Button variant=\"light\">\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </Button>\r\n          <Button variant=\"light\">\r\n            <Link to=\"/demos\">Demos</Link>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopTitle;\r\n","import React from \"react\";\r\nimport TopTitle from \"../../layout/top_tilte/top_title\";\r\nimport back from '../../back.jpg'\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <TopTitle />\r\n      <img\r\n        src={back}\r\n        alt=\"Girl in a jacket\"\r\n        width=\"100%\"\r\n        height=\"auto\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport TopTitle from \"../../layout/top_tilte/top_title\";\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <>\r\n      <TopTitle />\r\n      <br />\r\n      <main role=\"main\" class=\"inner cover\">\r\n        <h1 class=\"cover-heading\">Cover your page.</h1>\r\n        <p class=\"lead\">\r\n          Cover is a one-page template for building simple and beautiful home\r\n          pages. Download, edit the text, and add your own fullscreen background\r\n          photo to make it your own.\r\n        </p>\r\n        {/* <p class=\"lead\">\r\n          <a href=\"#\" class=\"btn btn-lg btn-secondary\">\r\n            Learn more\r\n          </a>\r\n        </p> */}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from \"react\";\r\nimport TopTitle from \"../../layout/top_tilte/top_title\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <>\r\n      <TopTitle />\r\n      <Card>\r\n        <Card.Body>Mobile No: 01798119164</Card.Body>\r\n        <Card.Body>Email: shozibkhan.sk.ph@gmail.com</Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport TopTitle from \"../../layout/top_tilte/top_title\";\r\n\r\nfunction Demos() {\r\n  return (\r\n    <>\r\n      <TopTitle />\r\n      <br/>\r\n      <Card style={{ marginLeft: '20px', width: \"18rem\" }}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          style={{ width: \"300px\", height: \"300px\" }}\r\n          src=\"https://www.docker.com/sites/default/files/social/docker_facebook_share.png\"\r\n        />\r\n        <Card.Body> \r\n          <Card.Title>Docker</Card.Title>\r\n          {/* <Card.Text>Docker Updatge</Card.Text>\r\n          <Button variant=\"primary\">Update</Button> */}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Demos;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/home/home\";\nimport AboutUs from \"./components/aboutus/aboutus\";\n\nimport Contact from \"./components/contact/contact\";\nimport Demos from \"./components/demos/demos\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload asfdsdafsdfgfdsfgdf.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n\n        <Home />\n      </header> */}\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/aboutus\" component={AboutUs} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/demos\" component={Demos} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}